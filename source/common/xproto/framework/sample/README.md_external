# libxproto.so 样例代码使用说明

## 编译

样例代码自带了编译脚本，目前支持aarch64, ubuntu, centos三种平台编译
以`ubuntu`平台为例，使用如下

```bash
cd lib_aiexpress/example/xproto
bash build.sh ubuntu
```

## 部署和运行
仍以以`ubuntu`平台为例,将lib_aiexpress/example/xproto/build/bin拷贝到`ubuntu`平台的设备上，并进入build/bin目录下，运行可执行文件，即可。

```bash
cd lib_aiexpress/example/xstream/build/bin
./sample_plugin
```

aarch64和centos平台，可直接参考`ubuntu`平台的编译和部署运行

## 样例代码具体实现说明

source/common/xproto/framework/sample/sample_plugin.cpp中展示了一个基于xproto的典型的生产者-消费者模型的处理过程。(生产者每次生产一个数字5的message，并将这个message，push给xproto框架，共生产100次；消费者每次取数字5进行累计，直到xproto上所有的消息都被处理)

样例首先定义了一个NumberProdMessage的消息类型、NumberProducerPlugin(生产者)类型、SumConsumerPlugin(消费者)类型

在初始化过程中，SumConsumerPlugin会向xproto框架注册监听TYPE_SAMPLE_MESSAGE类型的消息。

然后NumberProducerPlugin(生产者)不断生产消息类型为TYPE_SAMPLE_MESSAGE的message，并将生产的message push给xproto框架，xproto框架会主动调用SumConsumerPlugin(消费者)对消息进行处理。
